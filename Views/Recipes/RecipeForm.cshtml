@model TastyMVC.ViewModels.RecipeViewModel

@{
    var button = "Create";

    if (Model.RecipeID == null)
    {
        ViewBag.Title = "New Recipe";

    }
    else
    {
        ViewBag.Title = "Edit Recipe";
        button = "Update";
    }
}

<h2>Create</h2>

@using (Html.BeginForm(
    "CreateOrUpdate", null, FormMethod.Post, FormMethod.Post, new { enctype = "multipart/form-data" })
)
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.RecipeID)
    <div class="form-horizontal">
        <h4>Recipe</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row ">
            <div class="form-group col-4">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-4">
                @Html.LabelFor(model => model.portion, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.portion, new
                {
                    htmlAttributes = new { @class = "form-control", @type = "number" }
                })
                @Html.ValidationMessageFor(model => model.portion, "", new { @class = "text-danger", @min = 1 })
            </div>
            <div class="form-group col-4">

                @Html.LabelFor(x => x.Category, htmlAttributes: new { @class = "control-label " })
                @Html.DropDownListFor(x => x.Category, new SelectList(Model.AllCategories, "ID", "Name"), htmlAttributes: new { @class = "form-control", id = "Category" })
                @Html.ValidationMessageFor(x => x.Category, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            <label for="ThumbnailInput">Thumpnail</label>
            <div class="row">
                <input type="file" name="file" accept="image/*" class="form-control-file col-md-6" id="ThumbnailInput">
                @if (Model.ThumbNail?.Data.Length > 0)
                {
                    <img width="400" class="img-fluid offset-md-3 col-md-3" src="data:image;base64,@System.Convert.ToBase64String(Model.ThumbNail.Data)" alt="" />
                }
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@button" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
