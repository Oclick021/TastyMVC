@model TastyMVC.ViewModels.AddIngredientViewModel



@using (Html.BeginForm(
    "AddIngredient", "Recipes", FormMethod.Post)
)
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recipe</h4>
        <hr />
        @Html.HiddenFor(x => x.RecipeID)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(x => x.Ingredient, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(x => x.Ingredient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Ingredient, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Unit, htmlAttributes: new { @class = "control-label " })

            @Html.DropDownListFor(x => x.Unit, new SelectList(Model.AllUnits, "ID", "Name"), htmlAttributes: new { @class = "form-control", id = "Unit" })
            @Html.ValidationMessageFor(x => x.Unit, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Amount, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(x => x.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Amount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            <input type="submit" value="Add ingredient" class="btn btn-default" />
        </div>
    </div>
}

<script>
    $(function () {
        var availableTags =  @Html.Raw(Json.Encode(Model.AllIngredients.Select(x => x.Name)));
        $("#Ingredient").autocomplete({
            source: availableTags
        });
    });

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}